{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/dbchat/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatComponent from './ChatComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [dbConfig, setDbConfig] = useState({\n    host: 'localhost',\n    port: '3306',\n    username: 'root',\n    password: '',\n    database: 'testdb'\n  });\n  const [sessions, setSessions] = useState([]);\n  const [activeSessionId, setActiveSessionId] = useState(localStorage.getItem('sessionId') || null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useEffect(() => {\n    if (!activeSessionId) {\n      const newSessionId = 'session-' + Date.now();\n      setActiveSessionId(newSessionId);\n      localStorage.setItem('sessionId', newSessionId);\n    }\n  }, [activeSessionId]);\n  useEffect(() => {\n    testBackendConnection();\n    fetchSessions();\n  }, []);\n  useEffect(() => {\n    if (activeSessionId) {\n      localStorage.setItem('sessionId', activeSessionId);\n    }\n  }, [activeSessionId]);\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetch('/api/database/test');\n      if (response.ok) {\n        console.log('Backend is reachable');\n      } else {\n        console.error('Failed to reach backend');\n      }\n    } catch (error) {\n      console.error('Error testing backend connection:', error);\n    }\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions');\n      if (response.ok) {\n        const data = await response.json();\n        setSessions(data);\n        if (!activeSessionId && data.length > 0) {\n          setActiveSessionId(data[0].sessionId);\n          localStorage.setItem('sessionId', data[0].sessionId);\n        }\n      } else {\n        console.error('Failed to fetch sessions');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setDbConfig({\n      ...dbConfig,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleConnect = async () => {\n    try {\n      const sessionId = activeSessionId || 'session-' + Date.now();\n      setActiveSessionId(sessionId);\n      localStorage.setItem('sessionId', sessionId);\n      console.log('Connecting with session ID:', sessionId);\n      const response = await fetch('/api/database/connect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId\n        },\n        body: JSON.stringify(dbConfig)\n      });\n      if (response.ok) {\n        setConnectionStatus('success');\n        console.log('Connection successful');\n        await fetchSessions(); // Update the sessions list\n      } else {\n        const errorText = await response.text();\n        console.error('Connection failed:', errorText);\n        setConnectionStatus('error');\n      }\n    } catch (error) {\n      console.error('Connection error:', error);\n      setConnectionStatus('error');\n    }\n  };\n  const handleNewSession = () => {\n    const newSessionId = 'session-' + Date.now();\n    setActiveSessionId(newSessionId);\n    localStorage.setItem('sessionId', newSessionId);\n    setConnectionStatus('');\n    setDbConfig({\n      host: 'localhost',\n      port: '3306',\n      username: 'root',\n      password: '',\n      database: 'testdb'\n    });\n  };\n  const clearSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions/clear', {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setSessions([]);\n        setActiveSessionId(null);\n        localStorage.removeItem('sessionId');\n        setShowConfirmation(false);\n        setConnectionStatus('');\n        setDbConfig({\n          host: 'localhost',\n          port: '3306',\n          username: 'root',\n          password: '',\n          database: 'testdb'\n        });\n      } else {\n        console.error('Failed to clear sessions');\n      }\n    } catch (error) {\n      console.error('Error clearing sessions:', error);\n    }\n  };\n  const handleSessionChange = e => {\n    const sessionId = e.target.value;\n    setActiveSessionId(sessionId);\n    localStorage.setItem('sessionId', sessionId);\n    setConnectionStatus('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-content session-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"session-btn\",\n            onClick: handleNewSession,\n            children: \"New Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"session-btn\",\n            onClick: () => setShowConfirmation(true),\n            disabled: !sessions.length,\n            children: \"Clear Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"session-select\",\n            value: activeSessionId || '',\n            onChange: handleSessionChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), sessions.map(session => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: session.sessionId,\n              children: session.sessionId\n            }, session.sessionId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-content database-connection-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Database Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect to your MySQL database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Host\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"host\",\n            value: dbConfig.host,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Port\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"port\",\n            value: dbConfig.port,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: dbConfig.username,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: dbConfig.password,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"database\",\n            value: dbConfig.database,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `connect-button ${connectionStatus}`,\n          onClick: handleConnect,\n          disabled: !activeSessionId,\n          children: connectionStatus === 'success' ? 'Connected' : 'Connect'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat with MySQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatComponent, {\n        connectionStatus: connectionStatus,\n        activeSessionId: activeSessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You are about to clear all sessions. Click \\\"Yes\\\" if you wish to delete all previous messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearSessions,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"u3WaLkB8jhBtcXeEkHv916eSbHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatComponent","jsxDEV","_jsxDEV","App","_s","connectionStatus","setConnectionStatus","dbConfig","setDbConfig","host","port","username","password","database","sessions","setSessions","activeSessionId","setActiveSessionId","localStorage","getItem","showConfirmation","setShowConfirmation","newSessionId","Date","now","setItem","testBackendConnection","fetchSessions","response","fetch","ok","console","log","error","data","json","length","sessionId","handleInputChange","e","target","name","value","handleConnect","method","headers","body","JSON","stringify","errorText","text","handleNewSession","clearSessions","removeItem","handleSessionChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","map","session","type","_c","$RefreshReg$"],"sources":["/Users/manmohan/dbchat/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatComponent from './ChatComponent';\n\nfunction App() {\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [dbConfig, setDbConfig] = useState({\n    host: 'localhost',\n    port: '3306',\n    username: 'root',\n    password: '',\n    database: 'testdb',\n  });\n  const [sessions, setSessions] = useState([]);\n  const [activeSessionId, setActiveSessionId] = useState(localStorage.getItem('sessionId') || null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  useEffect(() => {\n    if (!activeSessionId) {\n      const newSessionId = 'session-' + Date.now();\n      setActiveSessionId(newSessionId);\n      localStorage.setItem('sessionId', newSessionId);\n    }\n  }, [activeSessionId]);\n\n  useEffect(() => {\n    testBackendConnection();\n    fetchSessions();\n  }, []);\n\n  useEffect(() => {\n    if (activeSessionId) {\n      localStorage.setItem('sessionId', activeSessionId);\n    }\n  }, [activeSessionId]);\n\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetch('/api/database/test');\n      if (response.ok) {\n        console.log('Backend is reachable');\n      } else {\n        console.error('Failed to reach backend');\n      }\n    } catch (error) {\n      console.error('Error testing backend connection:', error);\n    }\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions');\n      if (response.ok) {\n        const data = await response.json();\n        setSessions(data);\n        if (!activeSessionId && data.length > 0) {\n          setActiveSessionId(data[0].sessionId);\n          localStorage.setItem('sessionId', data[0].sessionId);\n        }\n      } else {\n        console.error('Failed to fetch sessions');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setDbConfig({ ...dbConfig, [e.target.name]: e.target.value });\n  };\n\n  const handleConnect = async () => {\n    try {\n      const sessionId = activeSessionId || 'session-' + Date.now();\n      setActiveSessionId(sessionId);\n      localStorage.setItem('sessionId', sessionId);\n\n      console.log('Connecting with session ID:', sessionId);\n      const response = await fetch('/api/database/connect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId,\n        },\n        body: JSON.stringify(dbConfig),\n      });\n\n      if (response.ok) {\n        setConnectionStatus('success');\n        console.log('Connection successful');\n        await fetchSessions(); // Update the sessions list\n      } else {\n        const errorText = await response.text();\n        console.error('Connection failed:', errorText);\n        setConnectionStatus('error');\n      }\n    } catch (error) {\n      console.error('Connection error:', error);\n      setConnectionStatus('error');\n    }\n  };\n\n  const handleNewSession = () => {\n    const newSessionId = 'session-' + Date.now();\n    setActiveSessionId(newSessionId);\n    localStorage.setItem('sessionId', newSessionId);\n    setConnectionStatus('');\n    setDbConfig({\n      host: 'localhost',\n      port: '3306',\n      username: 'root',\n      password: '',\n      database: 'testdb',\n    });\n  };\n  const clearSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions/clear', {\n        method: 'DELETE',\n      });\n      if (response.ok) {\n        setSessions([]);\n        setActiveSessionId(null);\n        localStorage.removeItem('sessionId');\n        setShowConfirmation(false);\n        setConnectionStatus('');\n        setDbConfig({\n          host: 'localhost',\n          port: '3306',\n          username: 'root',\n          password: '',\n          database: 'testdb',\n        });\n      } else {\n        console.error('Failed to clear sessions');\n      }\n    } catch (error) {\n      console.error('Error clearing sessions:', error);\n    }\n  };\n\n  const handleSessionChange = (e) => {\n    const sessionId = e.target.value;\n    setActiveSessionId(sessionId);\n    localStorage.setItem('sessionId', sessionId);\n    setConnectionStatus('');\n  };\n\n  return (\n      <div className=\"app-container\">\n        <div className=\"sidebar\">\n          {/* Sessions Area */}\n          <div className=\"sidebar-content session-card\">\n            <h3>Sessions</h3>\n            <div className=\"session-buttons\">\n              <button className=\"session-btn\" onClick={handleNewSession}>New Session</button>\n              <button className=\"session-btn\" onClick={() => setShowConfirmation(true)} disabled={!sessions.length}>Clear Sessions</button>\n            </div>\n            <div className=\"form-group\">\n              <label>Select Session</label>\n              <select\n                  className=\"session-select\"\n                  value={activeSessionId || ''}\n                  onChange={handleSessionChange}\n              >\n                <option value=\"\" disabled>Select a session</option>\n                {sessions.map((session) => (\n                    <option key={session.sessionId} value={session.sessionId}>{session.sessionId}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Database Connection Area */}\n          <div className=\"sidebar-content database-connection-card\">\n            <h3>Database Connection</h3>\n            <p>Connect to your MySQL database</p>\n            <div className=\"form-group\">\n              <label>Host</label>\n              <input type=\"text\" name=\"host\" value={dbConfig.host} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Port</label>\n              <input type=\"text\" name=\"port\" value={dbConfig.port} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Username</label>\n              <input type=\"text\" name=\"username\" value={dbConfig.username} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input type=\"password\" name=\"password\" value={dbConfig.password} onChange={handleInputChange} />\n            </div>\n            <div className=\"form-group\">\n              <label>Database</label>\n              <input type=\"text\" name=\"database\" value={dbConfig.database} onChange={handleInputChange} />\n            </div>\n            <button className={`connect-button ${connectionStatus}`} onClick={handleConnect} disabled={!activeSessionId}>\n              {connectionStatus === 'success' ? 'Connected' : 'Connect'}\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content Area */}\n        <main className=\"main-content\">\n          <h1>Chat with MySQL</h1>\n          <ChatComponent connectionStatus={connectionStatus} activeSessionId={activeSessionId} />\n        </main>\n\n\n\n        {showConfirmation && (\n            <div className=\"popup-overlay\">\n              <div className=\"popup\">\n                <p>You are about to clear all sessions. Click \"Yes\" if you wish to delete all previous messages.</p>\n                <button onClick={clearSessions}>Yes</button>\n                <button onClick={() => setShowConfirmation(false)}>No</button>\n              </div>\n            </div>\n        )}\n      </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}