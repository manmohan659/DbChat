{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/dbchat/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatComponent from './ChatComponent';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [dbConfig, setDbConfig] = useState({\n    host: 'localhost',\n    port: '3306',\n    username: 'root',\n    password: '',\n    database: 'testdb'\n  });\n  const [sessions, setSessions] = useState([]);\n  // App.js\n\n  const [activeSessionId, setActiveSessionId] = useState(localStorage.getItem('sessionId') || null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useEffect(() => {\n    testBackendConnection();\n    fetchSessions();\n  }, []);\n  useEffect(() => {\n    if (activeSessionId) {\n      localStorage.setItem('sessionId', activeSessionId);\n    }\n  }, [activeSessionId]);\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetch('/api/database/test');\n      if (response.ok) {\n        console.log('Backend is reachable');\n      } else {\n        console.error('Failed to reach backend');\n      }\n    } catch (error) {\n      console.error('Error testing backend connection:', error);\n    }\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions');\n      if (response.ok) {\n        const data = await response.json();\n        setSessions(data);\n        if (!activeSessionId && data.length > 0) {\n          setActiveSessionId(data[0].sessionId);\n          localStorage.setItem('sessionId', data[0].sessionId);\n        }\n      } else {\n        console.error('Failed to fetch sessions');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setDbConfig({\n      ...dbConfig,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleConnect = async () => {\n    try {\n      const sessionId = activeSessionId || 'session-' + Date.now();\n      setActiveSessionId(sessionId);\n      localStorage.setItem('sessionId', sessionId);\n      const response = await fetch('/api/database/connect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId\n        },\n        body: JSON.stringify(dbConfig)\n      });\n      if (response.ok) {\n        setConnectionStatus('success');\n        fetchSessions(); // Update the sessions list\n      } else {\n        const errorText = await response.text();\n        console.error('Connection failed:', errorText);\n        setConnectionStatus('error');\n      }\n    } catch (error) {\n      console.error('Connection error:', error);\n      setConnectionStatus('error');\n    }\n  };\n  const handleNewSession = () => {\n    const newSessionId = 'session-' + Date.now();\n    setActiveSessionId(newSessionId);\n    localStorage.setItem('sessionId', newSessionId);\n    setConnectionStatus('');\n    setDbConfig({\n      host: 'localhost',\n      port: '3306',\n      username: 'root',\n      password: '',\n      database: 'testdb'\n    });\n  };\n  const handleClearSessions = () => {\n    setShowConfirmation(true);\n  };\n  const handleSessionChange = e => {\n    const sessionId = e.target.value;\n    setActiveSessionId(sessionId);\n    localStorage.setItem('sessionId', sessionId);\n    setConnectionStatus('');\n  };\n  const confirmClearSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions/clear', {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setSessions([]);\n        setActiveSessionId(null);\n        localStorage.removeItem('sessionId');\n        setConnectionStatus('');\n        setShowConfirmation(false);\n        setDbConfig({\n          host: 'localhost',\n          port: '3306',\n          username: 'root',\n          password: '',\n          database: 'testdb'\n        });\n      } else {\n        console.error('Failed to clear sessions');\n        setShowConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error clearing sessions:', error);\n      setShowConfirmation(false);\n    }\n  };\n\n  // Modified code with enclosing tag (use <React.Fragment> or <>...</>)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"session-btn\",\n            onClick: handleNewSession,\n            children: \"New Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"session-btn\",\n            onClick: handleClearSessions,\n            disabled: !sessions.length,\n            children: \"Clear Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"session-select\",\n            value: activeSessionId || '',\n            onChange: handleSessionChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), sessions.map(session => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: session.sessionId,\n              children: session.sessionId\n            }, session.sessionId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Database Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect to your MySQL database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Host\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"host\",\n          value: dbConfig.host,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Port\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"port\",\n          value: dbConfig.port,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: dbConfig.username,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: dbConfig.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"database\",\n          value: dbConfig.database,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `connect-button ${connectionStatus}`,\n        onClick: handleConnect,\n        disabled: !activeSessionId,\n        children: connectionStatus === 'success' ? 'Connected' : 'Connect'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat with MySQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatComponent, {\n        connectionStatus: connectionStatus,\n        activeSessionId: activeSessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You are about to clear all the sessions. Click on Yes if you wish to delete all previous messages.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmClearSessions,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9ShVDRFx1EyJi0eAXPQID0jX0BY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connectionStatus","setConnectionStatus","dbConfig","setDbConfig","host","port","username","password","database","sessions","setSessions","activeSessionId","setActiveSessionId","localStorage","getItem","showConfirmation","setShowConfirmation","testBackendConnection","fetchSessions","setItem","response","fetch","ok","console","log","error","data","json","length","sessionId","handleInputChange","e","target","name","value","handleConnect","Date","now","method","headers","body","JSON","stringify","errorText","text","handleNewSession","newSessionId","handleClearSessions","handleSessionChange","confirmClearSessions","removeItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","map","session","type","_c","$RefreshReg$"],"sources":["/Users/manmohan/dbchat/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatComponent from './ChatComponent';\n\nfunction App() {\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [dbConfig, setDbConfig] = useState({\n    host: 'localhost',\n    port: '3306',\n    username: 'root',\n    password: '',\n    database: 'testdb',\n  });\n  const [sessions, setSessions] = useState([]);\n  // App.js\n\n  const [activeSessionId, setActiveSessionId] = useState(localStorage.getItem('sessionId') || null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useEffect(() => {\n    testBackendConnection();\n    fetchSessions();\n  }, []);\n\n  useEffect(() => {\n    if (activeSessionId) {\n      localStorage.setItem('sessionId', activeSessionId);\n    }\n  }, [activeSessionId]);\n\n  const testBackendConnection = async () => {\n    try {\n      const response = await fetch('/api/database/test');\n      if (response.ok) {\n        console.log('Backend is reachable');\n      } else {\n        console.error('Failed to reach backend');\n      }\n    } catch (error) {\n      console.error('Error testing backend connection:', error);\n    }\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions');\n      if (response.ok) {\n        const data = await response.json();\n        setSessions(data);\n        if (!activeSessionId && data.length > 0) {\n          setActiveSessionId(data[0].sessionId);\n          localStorage.setItem('sessionId', data[0].sessionId);\n        }\n      } else {\n        console.error('Failed to fetch sessions');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setDbConfig({ ...dbConfig, [e.target.name]: e.target.value });\n  };\n\n  const handleConnect = async () => {\n    try {\n      const sessionId = activeSessionId || 'session-' + Date.now();\n      setActiveSessionId(sessionId);\n      localStorage.setItem('sessionId', sessionId);\n\n      const response = await fetch('/api/database/connect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId,\n        },\n        body: JSON.stringify(dbConfig),\n      });\n\n      if (response.ok) {\n        setConnectionStatus('success');\n        fetchSessions(); // Update the sessions list\n      } else {\n        const errorText = await response.text();\n        console.error('Connection failed:', errorText);\n        setConnectionStatus('error');\n      }\n    } catch (error) {\n      console.error('Connection error:', error);\n      setConnectionStatus('error');\n    }\n  };\n\n  const handleNewSession = () => {\n    const newSessionId = 'session-' + Date.now();\n    setActiveSessionId(newSessionId);\n    localStorage.setItem('sessionId', newSessionId);\n    setConnectionStatus('');\n    setDbConfig({\n      host: 'localhost',\n      port: '3306',\n      username: 'root',\n      password: '',\n      database: 'testdb',\n    });\n  };\n\n  const handleClearSessions = () => {\n    setShowConfirmation(true);\n  };\n\n  const handleSessionChange = (e) => {\n    const sessionId = e.target.value;\n    setActiveSessionId(sessionId);\n    localStorage.setItem('sessionId', sessionId);\n    setConnectionStatus('');\n  };\n  const confirmClearSessions = async () => {\n    try {\n      const response = await fetch('/api/sessions/clear', {\n        method: 'DELETE',\n      });\n      if (response.ok) {\n        setSessions([]);\n        setActiveSessionId(null);\n        localStorage.removeItem('sessionId');\n        setConnectionStatus('');\n        setShowConfirmation(false);\n        setDbConfig({\n          host: 'localhost',\n          port: '3306',\n          username: 'root',\n          password: '',\n          database: 'testdb',\n        });\n      } else {\n        console.error('Failed to clear sessions');\n        setShowConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error clearing sessions:', error);\n      setShowConfirmation(false);\n    }\n  };\n\n// Modified code with enclosing tag (use <React.Fragment> or <>...</>)\n\n  return (\n      <>\n        <div className=\"sidebar-content\">\n          <div className=\"session-card\">\n            <h3>Sessions</h3>\n            <div className=\"session-buttons\">\n              <button className=\"session-btn\" onClick={handleNewSession}>New Session</button>\n              <button className=\"session-btn\" onClick={handleClearSessions} disabled={!sessions.length}>Clear Sessions</button>\n            </div>\n            <div className=\"form-group\">\n              <label>Select Session</label>\n              <select\n                  className=\"session-select\"\n                  value={activeSessionId || ''}\n                  onChange={handleSessionChange}\n              >\n                <option value=\"\" disabled>Select a session</option>\n                {sessions.map((session) => (\n                    <option key={session.sessionId} value={session.sessionId}>{session.sessionId}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <h2>Database Connection</h2>\n          <p>Connect to your MySQL database</p>\n          <div className=\"form-group\">\n            <label>Host</label>\n            <input\n                type=\"text\"\n                name=\"host\"\n                value={dbConfig.host}\n                onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Port</label>\n            <input\n                type=\"text\"\n                name=\"port\"\n                value={dbConfig.port}\n                onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n                type=\"text\"\n                name=\"username\"\n                value={dbConfig.username}\n                onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n                type=\"password\"\n                name=\"password\"\n                value={dbConfig.password}\n                onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Database</label>\n            <input\n                type=\"text\"\n                name=\"database\"\n                value={dbConfig.database}\n                onChange={handleInputChange}\n            />\n          </div>\n          <button\n              className={`connect-button ${connectionStatus}`}\n              onClick={handleConnect}\n              disabled={!activeSessionId}\n          >\n            {connectionStatus === 'success' ? 'Connected' : 'Connect'}\n          </button>\n        </div>\n        <main className=\"main-content\">\n          <h1>Chat with MySQL</h1>\n          <ChatComponent\n              connectionStatus={connectionStatus}\n              activeSessionId={activeSessionId}\n          />\n        </main>\n        {showConfirmation && (\n            <div className=\"popup-overlay\">\n              <div className=\"popup\">\n                <p>You are about to clear all the sessions. Click on Yes if you wish to delete all previous messages.</p>\n                <button onClick={confirmClearSessions}>Yes</button>\n                <button onClick={() => setShowConfirmation(false)}>No</button>\n              </div>\n            </div>\n        )}\n      </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}