{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/dbchat/frontend/src/ChatComponent.js\",\n  _s = $RefreshSig$();\n// Import Material-UI components\nimport { DataGrid } from '@mui/x-data-grid';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  connectionStatus,\n  activeSessionId,\n  setActiveSessionId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  const [schemaUploaded, setSchemaUploaded] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n\n  // Load chat history when activeSessionId or connectionStatus changes\n  useEffect(() => {\n    const initializeChat = async () => {\n      if (activeSessionId) {\n        try {\n          const response = await fetch('/api/query/history', {\n            headers: {\n              'X-Session-ID': activeSessionId\n            }\n          });\n          if (response.ok) {\n            const history = await response.json();\n            const formattedHistory = history.map(msg => ({\n              text: msg.message,\n              isUser: msg.isUser,\n              type: msg.type,\n              sql: msg.generatedSql,\n              tableData: msg.tableData\n            }));\n            setMessages(formattedHistory);\n          } else {\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('Error loading chat history:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    initializeChat();\n  }, [activeSessionId]);\n\n  // Scroll to bottom when messages change\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const chatWindow = chatWindowRef.current;\n      const isScrolledToBottom = chatWindow.scrollHeight - chatWindow.scrollTop <= chatWindow.clientHeight + 100;\n      if (isScrolledToBottom) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const fileInputRef = useRef(null);\n\n  // **Handler to Simulate Click on Hidden File Input**\n  const handleFileButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // **Handler for File Selection and Upload**\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    let sessionId = activeSessionId;\n    if (!sessionId) {\n      // Create a new session ID if none exists\n      sessionId = 'session-' + Date.now();\n      setActiveSessionId(sessionId);\n      localStorage.setItem('sessionId', sessionId);\n    }\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await fetch('/api/schema/upload', {\n          method: 'POST',\n          headers: {\n            'X-Session-ID': sessionId\n          },\n          body: formData\n        });\n        if (response.ok) {\n          setSchemaUploaded(true); // Schema uploaded successfully\n          const successMessage = {\n            text: 'Schema uploaded successfully!',\n            isUser: false,\n            type: 'SYSTEM'\n          };\n          setMessages(prev => [...prev, successMessage]);\n        } else {\n          const errorText = await response.text();\n          const errorMessage = {\n            text: `Schema upload failed: ${errorText}`,\n            isUser: false,\n            type: 'ERROR'\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        }\n      } catch (error) {\n        const errorMessage = {\n          text: `Error uploading schema: ${error.message}`,\n          isUser: false,\n          type: 'ERROR'\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      text: input,\n      isUser: true,\n      type: 'QUERY'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const sessionId = activeSessionId;\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const aiMessage = {\n          text: data.message,\n          isUser: false,\n          type: data.type || 'RESPONSE',\n          sql: data.generatedSql,\n          tableData: data.tableData // Include tableData\n        };\n        setMessages(prev => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to process query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: error.message || 'Sorry, there was an error processing your request.',\n        isUser: false,\n        type: 'ERROR'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getMessageClassName = useCallback(message => {\n    let baseClass = 'message';\n    if (message.isUser) {\n      baseClass += ' user-message';\n    } else {\n      baseClass += ' ai-message';\n      if (message.type === 'ERROR') baseClass += ' error-message';\n      if (message.type === 'SYSTEM') baseClass += ' system-message';\n    }\n    return baseClass;\n  }, []);\n\n  // Function to render the table using Material-UI Data Grid\n  const renderTable = tableData => {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n\n    // Prepare columns for Data Grid\n    const columns = tableData.headers.map((header, index) => ({\n      field: header,\n      headerName: header,\n      width: 150\n    }));\n\n    // Prepare rows for Data Grid\n    const rows = tableData.rows.map((row, index) => {\n      const rowData = {\n        id: index\n      }; // Each row must have a unique id\n      tableData.headers.forEach((header, idx) => {\n        rowData[header] = row[idx];\n      });\n      return rowData;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%',\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        rowsPerPageOptions: [10, 20, 50],\n        sx: {\n          backgroundColor: '#1e1e1e',\n          color: '#fff',\n          '& .MuiDataGrid-cell': {\n            borderBottom: '1px solid #333'\n          },\n          '& .MuiDataGrid-columnHeaders': {\n            backgroundColor: '#252526',\n            borderBottom: '1px solid #333'\n          },\n          '& .MuiDataGrid-footerContainer': {\n            backgroundColor: '#252526',\n            borderTop: '1px solid #333'\n          },\n          '& .MuiTablePagination-root': {\n            color: '#fff'\n          },\n          '& .MuiIconButton-root': {\n            color: '#fff'\n          },\n          '& .MuiCheckbox-root': {\n            color: '#fff'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getMessageClassName(message),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-icon\",\n          children: message.isUser ? 'üë§' : message.type === 'ERROR' ? '‚ö†Ô∏è' : 'ü§ñ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this), message.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sql-query\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sql-label\",\n              children: \"Generated SQL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              children: message.sql\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 23\n          }, this), message.tableData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: renderTable(message.tableData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-button\",\n        onClick: handleFileButtonClick,\n        disabled: isLoading,\n        children: \"\\uD83D\\uDCCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileChange,\n        accept: \".sql,.txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: () => {\n          if (!(connectionStatus === 'success' || schemaUploaded)) {\n            setShowPopup(true);\n            setTimeout(() => setShowPopup(false), 4000); // Hide after 4 seconds\n          }\n        },\n        placeholder: connectionStatus === 'success' || schemaUploaded ? 'Type your query...' : 'Connect to database or upload schema first...',\n        disabled: !(connectionStatus === 'success' || schemaUploaded) || isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !(connectionStatus === 'success' || schemaUploaded) || isLoading || !input.trim(),\n        children: isLoading ? 'Processing...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floating-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please connect to a database or upload a schema to proceed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 7\n  }, this);\n}\n_s(ChatComponent, \"Br3/K4wpVdT2MwaoM2auOgHX+FI=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["DataGrid","React","useState","useEffect","useRef","useCallback","CircularProgress","jsxDEV","_jsxDEV","ChatComponent","connectionStatus","activeSessionId","setActiveSessionId","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","chatWindowRef","schemaUploaded","setSchemaUploaded","showPopup","setShowPopup","initializeChat","response","fetch","headers","ok","history","json","formattedHistory","map","msg","text","message","isUser","type","sql","generatedSql","tableData","error","console","scrollToBottom","current","chatWindow","isScrolledToBottom","scrollHeight","scrollTop","clientHeight","scrollIntoView","behavior","fileInputRef","handleFileButtonClick","click","handleFileChange","event","file","target","files","sessionId","Date","now","localStorage","setItem","formData","FormData","append","method","body","successMessage","prev","errorText","errorMessage","handleSubmit","e","preventDefault","trim","userMessage","JSON","stringify","query","data","aiMessage","Error","getMessageClassName","baseClass","renderTable","rows","columns","header","index","field","headerName","width","row","rowData","id","forEach","idx","style","height","marginTop","children","pageSize","rowsPerPageOptions","sx","backgroundColor","color","borderBottom","borderTop","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","size","onSubmit","onClick","disabled","display","onChange","accept","value","setTimeout","placeholder","_c","$RefreshReg$"],"sources":["/Users/manmohan/dbchat/frontend/src/ChatComponent.js"],"sourcesContent":["\n// Import Material-UI components\nimport { DataGrid } from '@mui/x-data-grid';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport './App.css';\n\n\nfunction ChatComponent({ connectionStatus, activeSessionId, setActiveSessionId }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  const [schemaUploaded, setSchemaUploaded] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n\n  // Load chat history when activeSessionId or connectionStatus changes\n  useEffect(() => {\n    const initializeChat = async () => {\n      if (activeSessionId) {\n        try {\n          const response = await fetch('/api/query/history', {\n            headers: {\n              'X-Session-ID': activeSessionId,\n            },\n          });\n\n          if (response.ok) {\n            const history = await response.json();\n            const formattedHistory = history.map((msg) => ({\n              text: msg.message,\n              isUser: msg.isUser,\n              type: msg.type,\n              sql: msg.generatedSql,\n              tableData: msg.tableData,\n            }));\n\n            setMessages(formattedHistory);\n          } else {\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('Error loading chat history:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n\n    initializeChat();\n  }, [activeSessionId]);\n\n  // Scroll to bottom when messages change\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const chatWindow = chatWindowRef.current;\n      const isScrolledToBottom =\n          chatWindow.scrollHeight - chatWindow.scrollTop <=\n          chatWindow.clientHeight + 100;\n\n      if (isScrolledToBottom) {\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  const fileInputRef = useRef(null);\n\n  // **Handler to Simulate Click on Hidden File Input**\n  const handleFileButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // **Handler for File Selection and Upload**\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    let sessionId = activeSessionId;\n\n    if (!sessionId) {\n      // Create a new session ID if none exists\n      sessionId = 'session-' + Date.now();\n      setActiveSessionId(sessionId);\n      localStorage.setItem('sessionId', sessionId);\n    }\n\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await fetch('/api/schema/upload', {\n          method: 'POST',\n          headers: {\n            'X-Session-ID': sessionId,\n          },\n          body: formData,\n        });\n        if (response.ok) {\n          setSchemaUploaded(true);  // Schema uploaded successfully\n          const successMessage = {\n            text: 'Schema uploaded successfully!',\n            isUser: false,\n            type: 'SYSTEM',\n          };\n          setMessages((prev) => [...prev, successMessage]);\n        } else {\n          const errorText = await response.text();\n          const errorMessage = {\n            text: `Schema upload failed: ${errorText}`,\n            isUser: false,\n            type: 'ERROR',\n          };\n          setMessages((prev) => [...prev, errorMessage]);\n        }\n      } catch (error) {\n        const errorMessage = {\n          text: `Error uploading schema: ${error.message}`,\n          isUser: false,\n          type: 'ERROR',\n        };\n        setMessages((prev) => [...prev, errorMessage]);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { text: input, isUser: true, type: 'QUERY' };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const sessionId = activeSessionId;\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId,\n        },\n        body: JSON.stringify({ query: input }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        const aiMessage = {\n          text: data.message,\n          isUser: false,\n          type: data.type || 'RESPONSE',\n          sql: data.generatedSql,\n          tableData: data.tableData, // Include tableData\n        };\n        setMessages((prev) => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to process query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text:\n            error.message || 'Sorry, there was an error processing your request.',\n        isUser: false,\n        type: 'ERROR',\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getMessageClassName = useCallback((message) => {\n    let baseClass = 'message';\n    if (message.isUser) {\n      baseClass += ' user-message';\n    } else {\n      baseClass += ' ai-message';\n      if (message.type === 'ERROR') baseClass += ' error-message';\n      if (message.type === 'SYSTEM') baseClass += ' system-message';\n    }\n    return baseClass;\n  }, []);\n\n  // Function to render the table using Material-UI Data Grid\n  const renderTable = (tableData) => {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n\n    // Prepare columns for Data Grid\n    const columns = tableData.headers.map((header, index) => ({\n      field: header,\n      headerName: header,\n      width: 150,\n    }));\n\n    // Prepare rows for Data Grid\n    const rows = tableData.rows.map((row, index) => {\n      const rowData = { id: index }; // Each row must have a unique id\n      tableData.headers.forEach((header, idx) => {\n        rowData[header] = row[idx];\n      });\n      return rowData;\n    });\n\n    return (\n        <div style={{ height: 400, width: '100%', marginTop: '16px' }}>\n          <DataGrid\n              rows={rows}\n              columns={columns}\n              pageSize={10}\n              rowsPerPageOptions={[10, 20, 50]}\n              sx={{\n                backgroundColor: '#1e1e1e',\n                color: '#fff',\n                '& .MuiDataGrid-cell': {\n                  borderBottom: '1px solid #333',\n                },\n                '& .MuiDataGrid-columnHeaders': {\n                  backgroundColor: '#252526',\n                  borderBottom: '1px solid #333',\n                },\n                '& .MuiDataGrid-footerContainer': {\n                  backgroundColor: '#252526',\n                  borderTop: '1px solid #333',\n                },\n                '& .MuiTablePagination-root': {\n                  color: '#fff',\n                },\n                '& .MuiIconButton-root': {\n                  color: '#fff',\n                },\n                '& .MuiCheckbox-root': {\n                  color: '#fff',\n                },\n              }}\n          />\n        </div>\n    );\n  };\n\n  return (\n      <div className=\"chat-container\">\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          {messages.map((message, index) => (\n              <div key={index} className={getMessageClassName(message)}>\n            <span className=\"message-icon\">\n              {message.isUser\n                  ? 'üë§'\n                  : message.type === 'ERROR'\n                      ? '‚ö†Ô∏è'\n                      : 'ü§ñ'}\n            </span>\n                <div className=\"message-content\">\n                  <div className=\"message-text\">{message.text}</div>\n                  {message.sql && (\n                      <div className=\"sql-query\">\n                        <span className=\"sql-label\">Generated SQL:</span>\n                        <code>{message.sql}</code>\n                      </div>\n                  )}\n                  {message.tableData && (\n                      <div className=\"table-container\">\n                        {renderTable(message.tableData)}\n                      </div>\n                  )}\n                </div>\n              </div>\n          ))}\n          {isLoading && (\n              <div className=\"loading-indicator\">\n                <CircularProgress size={24} color=\"inherit\"/>\n              </div>\n          )}\n          <div ref={messagesEndRef}/>\n        </div>\n        <form onSubmit={handleSubmit} className=\"input-area\">\n          <button\n              type=\"button\"\n              className=\"upload-button\"\n              onClick={handleFileButtonClick}\n              disabled={isLoading}\n          >\n            üìé\n          </button>\n          <input\n              ref={fileInputRef}\n              type=\"file\"\n              style={{display: 'none'}}\n              onChange={handleFileChange}\n              accept=\".sql,.txt\"\n          />\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onClick={() => {\n                if (!(connectionStatus === 'success' || schemaUploaded)) {\n                  setShowPopup(true);\n                  setTimeout(() => setShowPopup(false), 4000);  // Hide after 4 seconds\n                }\n              }}\n              placeholder={\n                connectionStatus === 'success' || schemaUploaded\n                    ? 'Type your query...'\n                    : 'Connect to database or upload schema first...'\n              }\n              disabled={!(connectionStatus === 'success' || schemaUploaded) || isLoading}\n          />\n\n          <button\n              type=\"submit\"\n              disabled={\n                  !(connectionStatus === 'success' || schemaUploaded) ||\n                  isLoading ||\n                  !input.trim()\n              }\n          >\n            {isLoading ? 'Processing...' : 'Send'}\n          </button>\n        </form>\n        {showPopup && (\n            <div className=\"floating-popup\">\n              <p>Please connect to a database or upload a schema to proceed.</p>\n            </div>\n        )}\n      </div>\n  );\n}\n\nexport default ChatComponent;"],"mappings":";;AACA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,aAAaA,CAAC;EAAEC,gBAAgB;EAAEC,eAAe;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAChF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMkB,cAAc,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMiB,aAAa,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMuB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIf,eAAe,EAAE;QACnB,IAAI;UACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;YACjDC,OAAO,EAAE;cACP,cAAc,EAAElB;YAClB;UACF,CAAC,CAAC;UAEF,IAAIgB,QAAQ,CAACG,EAAE,EAAE;YACf,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;YACrC,MAAMC,gBAAgB,GAAGF,OAAO,CAACG,GAAG,CAAEC,GAAG,KAAM;cAC7CC,IAAI,EAAED,GAAG,CAACE,OAAO;cACjBC,MAAM,EAAEH,GAAG,CAACG,MAAM;cAClBC,IAAI,EAAEJ,GAAG,CAACI,IAAI;cACdC,GAAG,EAAEL,GAAG,CAACM,YAAY;cACrBC,SAAS,EAAEP,GAAG,CAACO;YACjB,CAAC,CAAC,CAAC;YAEH3B,WAAW,CAACkB,gBAAgB,CAAC;UAC/B,CAAC,MAAM;YACLlB,WAAW,CAAC,EAAE,CAAC;UACjB;QACF,CAAC,CAAC,OAAO4B,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;UACnD5B,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,MAAM;QACLA,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC;IAEDW,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMkC,cAAc,GAAGxC,WAAW,CAAC,MAAM;IACvC,IAAIe,cAAc,CAAC0B,OAAO,EAAE;MAC1B,MAAMC,UAAU,GAAG1B,aAAa,CAACyB,OAAO;MACxC,MAAME,kBAAkB,GACpBD,UAAU,CAACE,YAAY,GAAGF,UAAU,CAACG,SAAS,IAC9CH,UAAU,CAACI,YAAY,GAAG,GAAG;MAEjC,IAAIH,kBAAkB,EAAE;QACtB5B,cAAc,CAAC0B,OAAO,CAACM,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MAC/D;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAENlD,SAAS,CAAC,MAAM;IACd0C,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAC/B,QAAQ,EAAE+B,cAAc,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAGlD,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAMmD,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAID,YAAY,CAACR,OAAO,EAAE;MACxBQ,YAAY,CAACR,OAAO,CAACU,KAAK,CAAC,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIC,SAAS,GAAGnD,eAAe;IAE/B,IAAI,CAACmD,SAAS,EAAE;MACd;MACAA,SAAS,GAAG,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MACnCpD,kBAAkB,CAACkD,SAAS,CAAC;MAC7BG,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,SAAS,CAAC;IAC9C;IAEA,IAAIH,IAAI,EAAE;MACR,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;MAC7B,IAAI;QACF,MAAMhC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;UACjD0C,MAAM,EAAE,MAAM;UACdzC,OAAO,EAAE;YACP,cAAc,EAAEiC;UAClB,CAAC;UACDS,IAAI,EAAEJ;QACR,CAAC,CAAC;QACF,IAAIxC,QAAQ,CAACG,EAAE,EAAE;UACfP,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAE;UAC1B,MAAMiD,cAAc,GAAG;YACrBpC,IAAI,EAAE,+BAA+B;YACrCE,MAAM,EAAE,KAAK;YACbC,IAAI,EAAE;UACR,CAAC;UACDxB,WAAW,CAAE0D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,cAAc,CAAC,CAAC;QAClD,CAAC,MAAM;UACL,MAAME,SAAS,GAAG,MAAM/C,QAAQ,CAACS,IAAI,CAAC,CAAC;UACvC,MAAMuC,YAAY,GAAG;YACnBvC,IAAI,EAAE,yBAAyBsC,SAAS,EAAE;YAC1CpC,MAAM,EAAE,KAAK;YACbC,IAAI,EAAE;UACR,CAAC;UACDxB,WAAW,CAAE0D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,YAAY,CAAC,CAAC;QAChD;MACF,CAAC,CAAC,OAAOhC,KAAK,EAAE;QACd,MAAMgC,YAAY,GAAG;UACnBvC,IAAI,EAAE,2BAA2BO,KAAK,CAACN,OAAO,EAAE;UAChDC,MAAM,EAAE,KAAK;UACbC,IAAI,EAAE;QACR,CAAC;QACDxB,WAAW,CAAE0D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,YAAY,CAAC,CAAC;MAChD;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC9D,KAAK,CAAC+D,IAAI,CAAC,CAAC,IAAI7D,SAAS,EAAE;IAEhC,MAAM8D,WAAW,GAAG;MAAE5C,IAAI,EAAEpB,KAAK;MAAEsB,MAAM,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAQ,CAAC;IAChExB,WAAW,CAAE0D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEO,WAAW,CAAC,CAAC;IAC7C/D,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAM2C,SAAS,GAAGnD,eAAe;MACjC,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;QACnD0C,MAAM,EAAE,MAAM;QACdzC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,cAAc,EAAEiC;QAClB,CAAC;QACDS,IAAI,EAAEU,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEnE;QAAM,CAAC;MACvC,CAAC,CAAC;MAEF,MAAMoE,IAAI,GAAG,MAAMzD,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMuD,SAAS,GAAG;UAChBjD,IAAI,EAAEgD,IAAI,CAAC/C,OAAO;UAClBC,MAAM,EAAE,KAAK;UACbC,IAAI,EAAE6C,IAAI,CAAC7C,IAAI,IAAI,UAAU;UAC7BC,GAAG,EAAE4C,IAAI,CAAC3C,YAAY;UACtBC,SAAS,EAAE0C,IAAI,CAAC1C,SAAS,CAAE;QAC7B,CAAC;QACD3B,WAAW,CAAE0D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEY,SAAS,CAAC,CAAC;MAC7C,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAACF,IAAI,CAAC/C,OAAO,IAAI,yBAAyB,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,MAAMgC,YAAY,GAAG;QACnBvC,IAAI,EACAO,KAAK,CAACN,OAAO,IAAI,oDAAoD;QACzEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE;MACR,CAAC;MACDxB,WAAW,CAAE0D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,YAAY,CAAC,CAAC;IAChD,CAAC,SAAS;MACRxD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMoE,mBAAmB,GAAGlF,WAAW,CAAEgC,OAAO,IAAK;IACnD,IAAImD,SAAS,GAAG,SAAS;IACzB,IAAInD,OAAO,CAACC,MAAM,EAAE;MAClBkD,SAAS,IAAI,eAAe;IAC9B,CAAC,MAAM;MACLA,SAAS,IAAI,aAAa;MAC1B,IAAInD,OAAO,CAACE,IAAI,KAAK,OAAO,EAAEiD,SAAS,IAAI,gBAAgB;MAC3D,IAAInD,OAAO,CAACE,IAAI,KAAK,QAAQ,EAAEiD,SAAS,IAAI,iBAAiB;IAC/D;IACA,OAAOA,SAAS;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,WAAW,GAAI/C,SAAS,IAAK;IACjC,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACb,OAAO,IAAI,CAACa,SAAS,CAACgD,IAAI,EAAE,OAAO,IAAI;;IAEpE;IACA,MAAMC,OAAO,GAAGjD,SAAS,CAACb,OAAO,CAACK,GAAG,CAAC,CAAC0D,MAAM,EAAEC,KAAK,MAAM;MACxDC,KAAK,EAAEF,MAAM;MACbG,UAAU,EAAEH,MAAM;MAClBI,KAAK,EAAE;IACT,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMN,IAAI,GAAGhD,SAAS,CAACgD,IAAI,CAACxD,GAAG,CAAC,CAAC+D,GAAG,EAAEJ,KAAK,KAAK;MAC9C,MAAMK,OAAO,GAAG;QAAEC,EAAE,EAAEN;MAAM,CAAC,CAAC,CAAC;MAC/BnD,SAAS,CAACb,OAAO,CAACuE,OAAO,CAAC,CAACR,MAAM,EAAES,GAAG,KAAK;QACzCH,OAAO,CAACN,MAAM,CAAC,GAAGK,GAAG,CAACI,GAAG,CAAC;MAC5B,CAAC,CAAC;MACF,OAAOH,OAAO;IAChB,CAAC,CAAC;IAEF,oBACI1F,OAAA;MAAK8F,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEP,KAAK,EAAE,MAAM;QAAEQ,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC5DjG,OAAA,CAACR,QAAQ;QACL0F,IAAI,EAAEA,IAAK;QACXC,OAAO,EAAEA,OAAQ;QACjBe,QAAQ,EAAE,EAAG;QACbC,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;QACjCC,EAAE,EAAE;UACFC,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,MAAM;UACb,qBAAqB,EAAE;YACrBC,YAAY,EAAE;UAChB,CAAC;UACD,8BAA8B,EAAE;YAC9BF,eAAe,EAAE,SAAS;YAC1BE,YAAY,EAAE;UAChB,CAAC;UACD,gCAAgC,EAAE;YAChCF,eAAe,EAAE,SAAS;YAC1BG,SAAS,EAAE;UACb,CAAC;UACD,4BAA4B,EAAE;YAC5BF,KAAK,EAAE;UACT,CAAC;UACD,uBAAuB,EAAE;YACvBA,KAAK,EAAE;UACT,CAAC;UACD,qBAAqB,EAAE;YACrBA,KAAK,EAAE;UACT;QACF;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEZ,CAAC;EAED,oBACI5G,OAAA;IAAK6G,SAAS,EAAC,gBAAgB;IAAAZ,QAAA,gBAC7BjG,OAAA;MAAK6G,SAAS,EAAC,aAAa;MAACC,GAAG,EAAEjG,aAAc;MAAAoF,QAAA,GAC7C3F,QAAQ,CAACoB,GAAG,CAAC,CAACG,OAAO,EAAEwD,KAAK,kBACzBrF,OAAA;QAAiB6G,SAAS,EAAE9B,mBAAmB,CAAClD,OAAO,CAAE;QAAAoE,QAAA,gBAC3DjG,OAAA;UAAM6G,SAAS,EAAC,cAAc;UAAAZ,QAAA,EAC3BpE,OAAO,CAACC,MAAM,GACT,IAAI,GACJD,OAAO,CAACE,IAAI,KAAK,OAAO,GACpB,IAAI,GACJ;QAAI;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACH5G,OAAA;UAAK6G,SAAS,EAAC,iBAAiB;UAAAZ,QAAA,gBAC9BjG,OAAA;YAAK6G,SAAS,EAAC,cAAc;YAAAZ,QAAA,EAAEpE,OAAO,CAACD;UAAI;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACjD/E,OAAO,CAACG,GAAG,iBACRhC,OAAA;YAAK6G,SAAS,EAAC,WAAW;YAAAZ,QAAA,gBACxBjG,OAAA;cAAM6G,SAAS,EAAC,WAAW;cAAAZ,QAAA,EAAC;YAAc;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD5G,OAAA;cAAAiG,QAAA,EAAOpE,OAAO,CAACG;YAAG;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CACR,EACA/E,OAAO,CAACK,SAAS,iBACdlC,OAAA;YAAK6G,SAAS,EAAC,iBAAiB;YAAAZ,QAAA,EAC7BhB,WAAW,CAACpD,OAAO,CAACK,SAAS;UAAC;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GArBEvB,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBV,CACR,CAAC,EACDlG,SAAS,iBACNV,OAAA;QAAK6G,SAAS,EAAC,mBAAmB;QAAAZ,QAAA,eAChCjG,OAAA,CAACF,gBAAgB;UAACiH,IAAI,EAAE,EAAG;UAACT,KAAK,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACR,eACD5G,OAAA;QAAK8G,GAAG,EAAElG;MAAe;QAAA6F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACN5G,OAAA;MAAMgH,QAAQ,EAAE5C,YAAa;MAACyC,SAAS,EAAC,YAAY;MAAAZ,QAAA,gBAClDjG,OAAA;QACI+B,IAAI,EAAC,QAAQ;QACb8E,SAAS,EAAC,eAAe;QACzBI,OAAO,EAAElE,qBAAsB;QAC/BmE,QAAQ,EAAExG,SAAU;QAAAuF,QAAA,EACvB;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5G,OAAA;QACI8G,GAAG,EAAEhE,YAAa;QAClBf,IAAI,EAAC,MAAM;QACX+D,KAAK,EAAE;UAACqB,OAAO,EAAE;QAAM,CAAE;QACzBC,QAAQ,EAAEnE,gBAAiB;QAC3BoE,MAAM,EAAC;MAAW;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACF5G,OAAA;QACI+B,IAAI,EAAC,MAAM;QACXuF,KAAK,EAAE9G,KAAM;QACb4G,QAAQ,EAAG/C,CAAC,IAAK5D,QAAQ,CAAC4D,CAAC,CAACjB,MAAM,CAACkE,KAAK,CAAE;QAC1CL,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI,EAAE/G,gBAAgB,KAAK,SAAS,IAAIY,cAAc,CAAC,EAAE;YACvDG,YAAY,CAAC,IAAI,CAAC;YAClBsG,UAAU,CAAC,MAAMtG,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE;UAChD;QACF,CAAE;QACFuG,WAAW,EACTtH,gBAAgB,KAAK,SAAS,IAAIY,cAAc,GAC1C,oBAAoB,GACpB,+CACP;QACDoG,QAAQ,EAAE,EAAEhH,gBAAgB,KAAK,SAAS,IAAIY,cAAc,CAAC,IAAIJ;MAAU;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eAEF5G,OAAA;QACI+B,IAAI,EAAC,QAAQ;QACbmF,QAAQ,EACJ,EAAEhH,gBAAgB,KAAK,SAAS,IAAIY,cAAc,CAAC,IACnDJ,SAAS,IACT,CAACF,KAAK,CAAC+D,IAAI,CAAC,CACf;QAAA0B,QAAA,EAEFvF,SAAS,GAAG,eAAe,GAAG;MAAM;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACN5F,SAAS,iBACNhB,OAAA;MAAK6G,SAAS,EAAC,gBAAgB;MAAAZ,QAAA,eAC7BjG,OAAA;QAAAiG,QAAA,EAAG;MAA2D;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACvG,EAAA,CAvUQJ,aAAa;AAAAwH,EAAA,GAAbxH,aAAa;AAyUtB,eAAeA,aAAa;AAAC,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}