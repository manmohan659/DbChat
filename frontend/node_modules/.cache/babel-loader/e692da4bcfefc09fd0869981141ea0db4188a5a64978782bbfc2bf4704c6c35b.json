{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/dbchat/frontend/src/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  connectionStatus\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    if (connectionStatus === 'success') {\n      setMessages([{\n        text: \"Hello! I'm a SQL assistant. Ask me anything about your database.\",\n        isUser: false\n      }]);\n    }\n  }, [connectionStatus]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      isUser: true\n    };\n    setMessages(msgs => [...msgs, userMessage]);\n    setInput('');\n    try {\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      if (response.ok) {\n        const sqlQuery = await response.text();\n        const aiMessage = {\n          text: sqlQuery,\n          isUser: false\n        };\n        setMessages(msgs => [...msgs, aiMessage]);\n      } else {\n        throw new Error('Failed to get SQL query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request.',\n        isUser: false\n      };\n      setMessages(msgs => [...msgs, errorMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user-message' : 'ai-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-icon\",\n          children: message.isUser ? 'ðŸ‘¤' : 'ðŸ¤–'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        disabled: connectionStatus !== 'success'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: connectionStatus !== 'success',\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"9O8vdW2/zxnqNWKJ7NIr/2i0F2U=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatComponent","connectionStatus","_s","messages","setMessages","input","setInput","text","isUser","handleSubmit","e","preventDefault","trim","userMessage","msgs","response","fetch","method","headers","body","JSON","stringify","query","ok","sqlQuery","aiMessage","Error","error","console","errorMessage","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/manmohan/dbchat/frontend/src/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction ChatComponent({ connectionStatus }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    if (connectionStatus === 'success') {\n      setMessages([{ text: \"Hello! I'm a SQL assistant. Ask me anything about your database.\", isUser: false }]);\n    }\n  }, [connectionStatus]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, isUser: true };\n    setMessages(msgs => [...msgs, userMessage]);\n    setInput('');\n\n    try {\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query: input })\n      });\n\n      if (response.ok) {\n        const sqlQuery = await response.text();\n        const aiMessage = { text: sqlQuery, isUser: false };\n        setMessages(msgs => [...msgs, aiMessage]);\n      } else {\n        throw new Error('Failed to get SQL query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = { text: 'Sorry, there was an error processing your request.', isUser: false };\n      setMessages(msgs => [...msgs, errorMessage]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-window\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.isUser ? 'user-message' : 'ai-message'}`}>\n            <span className=\"message-icon\">{message.isUser ? 'ðŸ‘¤' : 'ðŸ¤–'}</span>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n          disabled={connectionStatus !== 'success'}\n        />\n        <button type=\"submit\" disabled={connectionStatus !== 'success'}>Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}