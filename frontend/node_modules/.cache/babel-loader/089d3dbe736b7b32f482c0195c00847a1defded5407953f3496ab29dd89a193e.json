{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/dbchat/frontend/src/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport EnhancedTable from './EnhancedTable';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  connectionStatus,\n  activeSessionId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  useEffect(() => {\n    const initializeChat = async () => {\n      if (activeSessionId) {\n        try {\n          const response = await fetch('/api/query/history', {\n            headers: {\n              'X-Session-ID': activeSessionId\n            }\n          });\n          if (response.ok) {\n            const history = await response.json();\n            const formattedHistory = history.map(msg => ({\n              text: msg.message,\n              isUser: msg.isUser,\n              type: msg.type,\n              sql: msg.generatedSql,\n              tableData: msg.tableData\n            }));\n            setMessages(formattedHistory);\n          } else {\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('Error loading chat history:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    initializeChat();\n  }, [activeSessionId]);\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const chatWindow = chatWindowRef.current;\n      const isScrolledToBottom = chatWindow.scrollHeight - chatWindow.scrollTop <= chatWindow.clientHeight + 100;\n      if (isScrolledToBottom) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      text: input,\n      isUser: true,\n      type: 'QUERY'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const sessionId = activeSessionId;\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const aiMessage = {\n          text: data.message,\n          isUser: false,\n          type: data.type || 'RESPONSE',\n          sql: data.generatedSql,\n          tableData: data.tableData\n        };\n        setMessages(prev => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to process query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: error.message || 'Sorry, there was an error processing your request.',\n        isUser: false,\n        type: 'ERROR'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getMessageClassName = useCallback(message => {\n    let baseClass = 'message';\n    if (message.isUser) {\n      baseClass += ' user-message';\n    } else {\n      baseClass += ' ai-message';\n      if (message.type === 'ERROR') baseClass += ' error-message';\n      if (message.type === 'SYSTEM') baseClass += ' system-message';\n    }\n    return baseClass;\n  }, []);\n\n  // Function to prepare data for EnhancedTable\n  const prepareTableData = tableData => {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n    const columns = tableData.headers.map(header => ({\n      field: header,\n      headerName: header,\n      width: 150\n    }));\n    const rows = tableData.rows.map((row, index) => {\n      const rowData = {\n        id: index\n      };\n      tableData.headers.forEach((header, idx) => {\n        rowData[header] = row[idx];\n      });\n      return rowData;\n    });\n    return {\n      columns,\n      rows\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getMessageClassName(message),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-icon\",\n          children: message.isUser ? '👤' : message.type === 'ERROR' ? '⚠️' : '🤖'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this), message.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sql-query\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sql-label\",\n              children: \"Generated SQL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              children: message.sql\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 23\n          }, this), message.tableData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: (() => {\n              const tableProps = prepareTableData(message.tableData);\n              return tableProps ? /*#__PURE__*/_jsxDEV(EnhancedTable, {\n                rows: tableProps.rows,\n                columns: tableProps.columns\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 31\n              }, this) : null;\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: connectionStatus === 'success' ? 'Type your query...' : 'Connect to database first...',\n        disabled: connectionStatus !== 'success' || isLoading,\n        className: \"w-full px-4 py-2.5 bg-gray-800 text-white rounded-lg border border-gray-700 focus:border-blue-500 focus:ring-1 focus:ring-blue-500 hover:border-gray-600 transition-colors duration-200 placeholder-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: connectionStatus !== 'success' || isLoading || !input.trim(),\n        className: \"ml-2 px-6 py-2.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors duration-200 disabled:bg-gray-600 disabled:cursor-not-allowed\",\n        children: isLoading ? 'Processing...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 7\n  }, this);\n}\n_s(ChatComponent, \"F+irc2J3q2Lpqvkxlk1QFkZHJCk=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","CircularProgress","EnhancedTable","jsxDEV","_jsxDEV","ChatComponent","connectionStatus","activeSessionId","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","chatWindowRef","initializeChat","response","fetch","headers","ok","history","json","formattedHistory","map","msg","text","message","isUser","type","sql","generatedSql","tableData","error","console","scrollToBottom","current","chatWindow","isScrolledToBottom","scrollHeight","scrollTop","clientHeight","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","prev","sessionId","method","body","JSON","stringify","query","data","aiMessage","Error","errorMessage","getMessageClassName","baseClass","prepareTableData","rows","columns","header","field","headerName","width","row","index","rowData","id","forEach","idx","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","tableProps","size","color","onSubmit","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/manmohan/dbchat/frontend/src/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport EnhancedTable from './EnhancedTable';\nimport './App.css';\n\nfunction ChatComponent({ connectionStatus, activeSessionId }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n\n  useEffect(() => {\n    const initializeChat = async () => {\n      if (activeSessionId) {\n        try {\n          const response = await fetch('/api/query/history', {\n            headers: {\n              'X-Session-ID': activeSessionId,\n            },\n          });\n\n          if (response.ok) {\n            const history = await response.json();\n            const formattedHistory = history.map((msg) => ({\n              text: msg.message,\n              isUser: msg.isUser,\n              type: msg.type,\n              sql: msg.generatedSql,\n              tableData: msg.tableData,\n            }));\n\n            setMessages(formattedHistory);\n          } else {\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('Error loading chat history:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n\n    initializeChat();\n  }, [activeSessionId]);\n\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const chatWindow = chatWindowRef.current;\n      const isScrolledToBottom =\n          chatWindow.scrollHeight - chatWindow.scrollTop <=\n          chatWindow.clientHeight + 100;\n\n      if (isScrolledToBottom) {\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { text: input, isUser: true, type: 'QUERY' };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const sessionId = activeSessionId;\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId,\n        },\n        body: JSON.stringify({ query: input }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        const aiMessage = {\n          text: data.message,\n          isUser: false,\n          type: data.type || 'RESPONSE',\n          sql: data.generatedSql,\n          tableData: data.tableData,\n        };\n        setMessages((prev) => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to process query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: error.message || 'Sorry, there was an error processing your request.',\n        isUser: false,\n        type: 'ERROR',\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getMessageClassName = useCallback((message) => {\n    let baseClass = 'message';\n    if (message.isUser) {\n      baseClass += ' user-message';\n    } else {\n      baseClass += ' ai-message';\n      if (message.type === 'ERROR') baseClass += ' error-message';\n      if (message.type === 'SYSTEM') baseClass += ' system-message';\n    }\n    return baseClass;\n  }, []);\n\n  // Function to prepare data for EnhancedTable\n  const prepareTableData = (tableData) => {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n\n    const columns = tableData.headers.map((header) => ({\n      field: header,\n      headerName: header,\n      width: 150,\n    }));\n\n    const rows = tableData.rows.map((row, index) => {\n      const rowData = { id: index };\n      tableData.headers.forEach((header, idx) => {\n        rowData[header] = row[idx];\n      });\n      return rowData;\n    });\n\n    return { columns, rows };\n  };\n\n  return (\n      <div className=\"chat-container\">\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          {messages.map((message, index) => (\n              <div key={index} className={getMessageClassName(message)}>\n            <span className=\"message-icon\">\n              {message.isUser ? '👤' : message.type === 'ERROR' ? '⚠️' : '🤖'}\n            </span>\n                <div className=\"message-content\">\n                  <div className=\"message-text\">{message.text}</div>\n                  {message.sql && (\n                      <div className=\"sql-query\">\n                        <span className=\"sql-label\">Generated SQL:</span>\n                        <code>{message.sql}</code>\n                      </div>\n                  )}\n                  {message.tableData && (\n                      <div className=\"table-container\">\n                        {(() => {\n                          const tableProps = prepareTableData(message.tableData);\n                          return tableProps ? (\n                              <EnhancedTable\n                                  rows={tableProps.rows}\n                                  columns={tableProps.columns}\n                              />\n                          ) : null;\n                        })()}\n                      </div>\n                  )}\n                </div>\n              </div>\n          ))}\n          {isLoading && (\n              <div className=\"loading-indicator\">\n                <CircularProgress size={24} color=\"inherit\" />\n              </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n        <form onSubmit={handleSubmit} className=\"input-area\">\n          <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder={\n                connectionStatus === 'success'\n                    ? 'Type your query...'\n                    : 'Connect to database first...'\n              }\n              disabled={connectionStatus !== 'success' || isLoading}\n              className=\"w-full px-4 py-2.5 bg-gray-800 text-white rounded-lg\n            border border-gray-700 focus:border-blue-500 focus:ring-1\n            focus:ring-blue-500 hover:border-gray-600 transition-colors\n            duration-200 placeholder-gray-400\"\n          />\n          <button\n              type=\"submit\"\n              disabled={connectionStatus !== 'success' || isLoading || !input.trim()}\n              className=\"ml-2 px-6 py-2.5 bg-blue-600 text-white rounded-lg\n            hover:bg-blue-700 focus:outline-none focus:ring-2\n            focus:ring-blue-500 focus:ring-opacity-50 transition-colors\n            duration-200 disabled:bg-gray-600 disabled:cursor-not-allowed\"\n          >\n            {isLoading ? 'Processing...' : 'Send'}\n          </button>\n        </form>\n      </div>\n  );\n}\n\nexport default ChatComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}