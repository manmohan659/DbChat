{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/dbchat/frontend/src/ChatComponent.js\",\n  _s = $RefreshSig$();\n// Import Material-UI components\nimport { DataGrid } from '@mui/x-data-grid';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  connectionStatus,\n  activeSessionId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  const [schemaUploaded, setSchemaUploaded] = useState(false);\n\n  // Load chat history when activeSessionId or connectionStatus changes\n  useEffect(() => {\n    const initializeChat = async () => {\n      if (activeSessionId) {\n        try {\n          const response = await fetch('/api/query/history', {\n            headers: {\n              'X-Session-ID': activeSessionId\n            }\n          });\n          if (response.ok) {\n            const history = await response.json();\n            const formattedHistory = history.map(msg => ({\n              text: msg.message,\n              isUser: msg.isUser,\n              type: msg.type,\n              sql: msg.generatedSql,\n              tableData: msg.tableData\n            }));\n            setMessages(formattedHistory);\n          } else {\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('Error loading chat history:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    initializeChat();\n  }, [activeSessionId]);\n\n  // Scroll to bottom when messages change\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const chatWindow = chatWindowRef.current;\n      const isScrolledToBottom = chatWindow.scrollHeight - chatWindow.scrollTop <= chatWindow.clientHeight + 100;\n      if (isScrolledToBottom) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const fileInputRef = useRef(null);\n\n  // **Handler to Simulate Click on Hidden File Input**\n  const handleFileButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // **Handler for File Selection and Upload**\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (file && activeSessionId) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await fetch('/api/schema/upload', {\n          method: 'POST',\n          headers: {\n            'X-Session-ID': activeSessionId\n          },\n          body: formData\n        });\n        if (response.ok) {\n          // Provide success feedback\n          const successMessage = {\n            text: 'Schema uploaded successfully!',\n            isUser: false,\n            type: 'SYSTEM'\n          };\n          setMessages(prev => [...prev, successMessage]);\n        } else {\n          // Handle error\n          const errorText = await response.text();\n          const errorMessage = {\n            text: `Schema upload failed: ${errorText}`,\n            isUser: false,\n            type: 'ERROR'\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        }\n      } catch (error) {\n        const errorMessage = {\n          text: `Error uploading schema: ${error.message}`,\n          isUser: false,\n          type: 'ERROR'\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      text: input,\n      isUser: true,\n      type: 'QUERY'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const sessionId = activeSessionId;\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const aiMessage = {\n          text: data.message,\n          isUser: false,\n          type: data.type || 'RESPONSE',\n          sql: data.generatedSql,\n          tableData: data.tableData // Include tableData\n        };\n        setMessages(prev => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to process query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: error.message || 'Sorry, there was an error processing your request.',\n        isUser: false,\n        type: 'ERROR'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getMessageClassName = useCallback(message => {\n    let baseClass = 'message';\n    if (message.isUser) {\n      baseClass += ' user-message';\n    } else {\n      baseClass += ' ai-message';\n      if (message.type === 'ERROR') baseClass += ' error-message';\n      if (message.type === 'SYSTEM') baseClass += ' system-message';\n    }\n    return baseClass;\n  }, []);\n\n  // Function to render the table using Material-UI Data Grid\n  const renderTable = tableData => {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n\n    // Prepare columns for Data Grid\n    const columns = tableData.headers.map((header, index) => ({\n      field: header,\n      headerName: header,\n      width: 150\n    }));\n\n    // Prepare rows for Data Grid\n    const rows = tableData.rows.map((row, index) => {\n      const rowData = {\n        id: index\n      }; // Each row must have a unique id\n      tableData.headers.forEach((header, idx) => {\n        rowData[header] = row[idx];\n      });\n      return rowData;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%',\n        marginTop: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        rowsPerPageOptions: [10, 20, 50],\n        sx: {\n          backgroundColor: '#1e1e1e',\n          color: '#fff',\n          '& .MuiDataGrid-cell': {\n            borderBottom: '1px solid #333'\n          },\n          '& .MuiDataGrid-columnHeaders': {\n            backgroundColor: '#252526',\n            borderBottom: '1px solid #333'\n          },\n          '& .MuiDataGrid-footerContainer': {\n            backgroundColor: '#252526',\n            borderTop: '1px solid #333'\n          },\n          '& .MuiTablePagination-root': {\n            color: '#fff'\n          },\n          '& .MuiIconButton-root': {\n            color: '#fff'\n          },\n          '& .MuiCheckbox-root': {\n            color: '#fff'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getMessageClassName(message),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-icon\",\n          children: message.isUser ? 'üë§' : message.type === 'ERROR' ? '‚ö†Ô∏è' : 'ü§ñ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), message.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sql-query\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sql-label\",\n              children: \"Generated SQL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              children: message.sql\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 23\n          }, this), message.tableData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: renderTable(message.tableData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"upload-button\",\n        onClick: handleFileButtonClick,\n        disabled: isLoading,\n        children: \"\\uD83D\\uDCCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileChange,\n        accept: \".sql,.txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        s: true,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: connectionStatus === 'success' ? 'Type your query...' : 'Connect to database first...',\n        disabled: connectionStatus !== 'success' || isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: connectionStatus !== 'success' || isLoading || !input.trim(),\n        children: isLoading ? 'Processing...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 7\n  }, this);\n}\n_s(ChatComponent, \"EmSna83p1/jeByHA9amrGc0O14c=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["DataGrid","React","useState","useEffect","useRef","useCallback","CircularProgress","jsxDEV","_jsxDEV","ChatComponent","connectionStatus","activeSessionId","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","chatWindowRef","schemaUploaded","setSchemaUploaded","initializeChat","response","fetch","headers","ok","history","json","formattedHistory","map","msg","text","message","isUser","type","sql","generatedSql","tableData","error","console","scrollToBottom","current","chatWindow","isScrolledToBottom","scrollHeight","scrollTop","clientHeight","scrollIntoView","behavior","fileInputRef","handleFileButtonClick","click","handleFileChange","event","file","target","files","formData","FormData","append","method","body","successMessage","prev","errorText","errorMessage","handleSubmit","e","preventDefault","trim","userMessage","sessionId","JSON","stringify","query","data","aiMessage","Error","getMessageClassName","baseClass","renderTable","rows","columns","header","index","field","headerName","width","row","rowData","id","forEach","idx","style","height","marginTop","children","pageSize","rowsPerPageOptions","sx","backgroundColor","color","borderBottom","borderTop","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","size","onSubmit","onClick","disabled","display","onChange","accept","s","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/manmohan/dbchat/frontend/src/ChatComponent.js"],"sourcesContent":["\n// Import Material-UI components\nimport { DataGrid } from '@mui/x-data-grid';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport './App.css';\n\n\nfunction ChatComponent({ connectionStatus, activeSessionId }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  const [schemaUploaded, setSchemaUploaded] = useState(false);\n\n  // Load chat history when activeSessionId or connectionStatus changes\n  useEffect(() => {\n    const initializeChat = async () => {\n      if (activeSessionId) {\n        try {\n          const response = await fetch('/api/query/history', {\n            headers: {\n              'X-Session-ID': activeSessionId,\n            },\n          });\n\n          if (response.ok) {\n            const history = await response.json();\n            const formattedHistory = history.map((msg) => ({\n              text: msg.message,\n              isUser: msg.isUser,\n              type: msg.type,\n              sql: msg.generatedSql,\n              tableData: msg.tableData,\n            }));\n\n            setMessages(formattedHistory);\n          } else {\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('Error loading chat history:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n\n    initializeChat();\n  }, [activeSessionId]);\n\n  // Scroll to bottom when messages change\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const chatWindow = chatWindowRef.current;\n      const isScrolledToBottom =\n          chatWindow.scrollHeight - chatWindow.scrollTop <=\n          chatWindow.clientHeight + 100;\n\n      if (isScrolledToBottom) {\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  const fileInputRef = useRef(null);\n\n  // **Handler to Simulate Click on Hidden File Input**\n  const handleFileButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // **Handler for File Selection and Upload**\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (file && activeSessionId) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await fetch('/api/schema/upload', {\n          method: 'POST',\n          headers: {\n            'X-Session-ID': activeSessionId,\n          },\n          body: formData,\n        });\n        if (response.ok) {\n          // Provide success feedback\n          const successMessage = {\n            text: 'Schema uploaded successfully!',\n            isUser: false,\n            type: 'SYSTEM',\n          };\n          setMessages((prev) => [...prev, successMessage]);\n        } else {\n          // Handle error\n          const errorText = await response.text();\n          const errorMessage = {\n            text: `Schema upload failed: ${errorText}`,\n            isUser: false,\n            type: 'ERROR',\n          };\n          setMessages((prev) => [...prev, errorMessage]);\n        }\n      } catch (error) {\n        const errorMessage = {\n          text: `Error uploading schema: ${error.message}`,\n          isUser: false,\n          type: 'ERROR',\n        };\n        setMessages((prev) => [...prev, errorMessage]);\n      }\n    }\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { text: input, isUser: true, type: 'QUERY' };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const sessionId = activeSessionId;\n      const response = await fetch('/api/query/nl-to-sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': sessionId,\n        },\n        body: JSON.stringify({ query: input }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        const aiMessage = {\n          text: data.message,\n          isUser: false,\n          type: data.type || 'RESPONSE',\n          sql: data.generatedSql,\n          tableData: data.tableData, // Include tableData\n        };\n        setMessages((prev) => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.message || 'Failed to process query');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text:\n            error.message || 'Sorry, there was an error processing your request.',\n        isUser: false,\n        type: 'ERROR',\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getMessageClassName = useCallback((message) => {\n    let baseClass = 'message';\n    if (message.isUser) {\n      baseClass += ' user-message';\n    } else {\n      baseClass += ' ai-message';\n      if (message.type === 'ERROR') baseClass += ' error-message';\n      if (message.type === 'SYSTEM') baseClass += ' system-message';\n    }\n    return baseClass;\n  }, []);\n\n  // Function to render the table using Material-UI Data Grid\n  const renderTable = (tableData) => {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n\n    // Prepare columns for Data Grid\n    const columns = tableData.headers.map((header, index) => ({\n      field: header,\n      headerName: header,\n      width: 150,\n    }));\n\n    // Prepare rows for Data Grid\n    const rows = tableData.rows.map((row, index) => {\n      const rowData = { id: index }; // Each row must have a unique id\n      tableData.headers.forEach((header, idx) => {\n        rowData[header] = row[idx];\n      });\n      return rowData;\n    });\n\n    return (\n        <div style={{ height: 400, width: '100%', marginTop: '16px' }}>\n          <DataGrid\n              rows={rows}\n              columns={columns}\n              pageSize={10}\n              rowsPerPageOptions={[10, 20, 50]}\n              sx={{\n                backgroundColor: '#1e1e1e',\n                color: '#fff',\n                '& .MuiDataGrid-cell': {\n                  borderBottom: '1px solid #333',\n                },\n                '& .MuiDataGrid-columnHeaders': {\n                  backgroundColor: '#252526',\n                  borderBottom: '1px solid #333',\n                },\n                '& .MuiDataGrid-footerContainer': {\n                  backgroundColor: '#252526',\n                  borderTop: '1px solid #333',\n                },\n                '& .MuiTablePagination-root': {\n                  color: '#fff',\n                },\n                '& .MuiIconButton-root': {\n                  color: '#fff',\n                },\n                '& .MuiCheckbox-root': {\n                  color: '#fff',\n                },\n              }}\n          />\n        </div>\n    );\n  };\n\n  return (\n      <div className=\"chat-container\">\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          {messages.map((message, index) => (\n              <div key={index} className={getMessageClassName(message)}>\n            <span className=\"message-icon\">\n              {message.isUser\n                  ? 'üë§'\n                  : message.type === 'ERROR'\n                      ? '‚ö†Ô∏è'\n                      : 'ü§ñ'}\n            </span>\n                <div className=\"message-content\">\n                  <div className=\"message-text\">{message.text}</div>\n                  {message.sql && (\n                      <div className=\"sql-query\">\n                        <span className=\"sql-label\">Generated SQL:</span>\n                        <code>{message.sql}</code>\n                      </div>\n                  )}\n                  {message.tableData && (\n                      <div className=\"table-container\">\n                        {renderTable(message.tableData)}\n                      </div>\n                  )}\n                </div>\n              </div>\n          ))}\n          {isLoading && (\n              <div className=\"loading-indicator\">\n                <CircularProgress size={24} color=\"inherit\"/>\n              </div>\n          )}\n          <div ref={messagesEndRef}/>\n        </div>\n        <form onSubmit={handleSubmit} className=\"input-area\">\n          <button\n              type=\"button\"\n              className=\"upload-button\"\n              onClick={handleFileButtonClick}\n              disabled={isLoading}\n          >\n            üìé\n          </button>\n          <input\n              ref={fileInputRef}\n              type=\"file\"\n              style={{display: 'none'}}\n              onChange={handleFileChange}\n              accept=\".sql,.txt\"\n          />\n          <input\n              type=\"text\"s\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder={\n                connectionStatus === 'success'\n                    ? 'Type your query...'\n                    : 'Connect to database first...'\n              }\n              disabled={connectionStatus !== 'success' || isLoading}\n          />\n          <button\n              type=\"submit\"\n              disabled={\n                  connectionStatus !== 'success' || isLoading || !input.trim()\n              }\n          >\n            {isLoading ? 'Processing...' : 'Send'}\n          </button>\n        </form>\n      </div>\n  );\n}\n\nexport default ChatComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}